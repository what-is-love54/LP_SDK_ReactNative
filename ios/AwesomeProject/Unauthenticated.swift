//
//  Unauthenticated.swift
//  AwesomeProject
//
//  Created by Vladyslav Saliuk on 09.04.2025.
//

import Foundation
import UIKit
import LPMessagingSDK

class DocumentationViewControllers: UIViewController {

  // MARK: - Setup Account information to use for Monitoring.

  /// Account ID is your site ID for your Conversational Cloud Account.
  let accountID: String = "77690044"
  /// appIntallID is a Application identifier generated by Conversational Cloud for Monitoring API.
  let appInstallID: String = "62b50381-4532-42a9-98dd-2045975ce5d3"

  override func viewDidLoad() {
    super.viewDidLoad()
    /// Create the following monitoring parameters object. This object will take in the appInstallID described above.
    let monitoringInitParams: LPMonitoringInitParams? = LPMonitoringInitParams(appInstallID: appInstallID)

    // MARK: - Setup instance of LPMessagingSDK

    /*
    Add the following code initializing the SDK instance. You will need to provide your account number as a String and the above created monitoring parameters. We have provided an example to use for the quickstart process in the "accountID" and monitoringInitParams constant.
    */
    do {
      try LPMessaging.instance.initialize(accountID, monitoringInitParams: monitoringInitParams)
    } catch {
      fatalError("Was unable to initialize LPMessagingSDK for account \(accountID)")
    }

    // MARK: - Show LPMessagingSDK View Stack and Conversation View Controller.

    /*
    Here your view controller will call our showConversation method provided by the LPMessagingSDK instance. This will push on a new navigation stack containing the Conversation View Controller. You would not need to authenticate as the LPMessagingSDK instance already has knowledge about your account from the monitoring information provided above. The Conversational Cloud console site attached to this account only has a basic set of features available to demonstrate the Conversational Commerce experience.
    */
    let conversationQuery = LPMessaging.instance.getConversationBrandQuery(accountID)
    let historyControlParam = LPConversationHistoryControlParam(historyConversationsStateToDisplay: .all, historyConversationsMaxDays: -1, historyMaxDaysType: .startConversationDate)
    let welcomeMessage = LPWelcomeMessage(message: "Hello, how may I help you?", frequency: .FirstTimeConversation)
    let conversationViewParams = LPConversationViewParams(conversationQuery: conversationQuery,
    containerViewController: nil, isViewOnly: false, conversationHistoryControlParam: historyControlParam, welcomeMessage: welcomeMessage)
    LPMessaging.instance.showConversation(conversationViewParams)
  }

  // MARK: - Release LPMessagingSDK view stack when client app is backgrounded or suspended

  deinit {
    let conversationQuery = LPMessaging.instance.getConversationBrandQuery(accountID)
    if (conversationQuery.getBrandID() == accountID) {
      LPMessaging.instance.removeConversation(conversationQuery)
    }
  }
}
